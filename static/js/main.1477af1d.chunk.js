(this["webpackJsonpreact-dijkstra"]=this["webpackJsonpreact-dijkstra"]||[]).push([[0],[,,,,,,function(e,t,a){},,,,,function(e,t,a){e.exports=a(20)},,,,,function(e,t,a){},,function(e,t,a){},function(e,t,a){},function(e,t,a){"use strict";a.r(t);var n=a(0),s=a.n(n),r=a(9),i=a.n(r),l=(a(16),a(7)),o=a.n(l),c=a(10),h=a(1),d=a(2),u=a(4),m=a(3),f=a(5),p=function e(t,a){Object(h.a)(this,e),this.element=t,this.priority=a},b=function(){function e(){Object(h.a)(this,e),this.heap=[]}return Object(d.a)(e,[{key:"insert",value:function(e,t){var a=new p(e,t);this.isEmpty()&&this.heap.push(a);for(var n=!1,s=0;s<this.heap.length;s++)if(a.priority<this.heap[s].priority){this.heap.splice(s,0,a),n=!0;break}n||this.heap.push(a)}},{key:"remove",value:function(){return this.heap.shift()}},{key:"isEmpty",value:function(){return 0===this.heap.length}}]),e}(),g=(a(6),function(e){function t(){return Object(h.a)(this,t),Object(u.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(f.a)(t,e),Object(d.a)(t,[{key:"render",value:function(){var e=this;return s.a.createElement("div",{className:"basicNode",onMouseUp:function(t){return e.props.handleClick(e)}},s.a.createElement("p",{id:"nodeText"},this.props.testid))}}]),t}(n.Component)),v=function(e){function t(e){var a;return Object(h.a)(this,t),(a=Object(u.a)(this,Object(m.a)(t).call(this,e))).state={hidden:"hidden"},a}return Object(f.a)(t,e),Object(d.a)(t,[{key:"componentWillMount",value:function(){var e=this;setTimeout((function(){e.show()}),e.props.wait)}},{key:"show",value:function(){this.setState({hidden:""})}},{key:"render",value:function(){return s.a.createElement("div",{className:"pathNode"},s.a.createElement("div",{className:"".concat(this.state.hidden)},this.props.testid))}}]),t}(n.Component),E=function(e){function t(){return Object(h.a)(this,t),Object(u.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(f.a)(t,e),Object(d.a)(t,[{key:"render",value:function(){return s.a.createElement("div",{className:"wallNode"},this.props.testid)}}]),t}(n.Component),w=function(e){function t(e){var a;return Object(h.a)(this,t),(a=Object(u.a)(this,Object(m.a)(t).call(this,e))).state={hiddentwo:"hiddentwo"},a}return Object(f.a)(t,e),Object(d.a)(t,[{key:"componentWillMount",value:function(){var e=this;setTimeout((function(){e.show()}),e.props.wait)}},{key:"show",value:function(){this.setState({hiddentwo:""})}},{key:"render",value:function(){return s.a.createElement("div",{className:"visitedNode"},s.a.createElement("div",{className:"".concat(this.state.hiddentwo)},this.props.testid))}}]),t}(n.Component),_=(a(18),20),k=20*_,N=function(){for(var e=new Array(20),t=0;t<_;t++)e[t]=new Array(_);return e},y=function(e){function t(e){var a;return Object(h.a)(this,t),(a=Object(u.a)(this,Object(m.a)(t).call(this,e))).handleClick=function(e){var t=a.state.toPath,n=a.state.wallNodes,r=a.state.ncList;if(!0===a.state.isWall){n.push(e.props.className);var i=[],l=[];for(r.forEach((function(e){e.forEach((function(e){n.find((function(t){return e.props.className===t}))?(e=s.a.createElement(E,{testid:e.props.testid,className:"wallNode"}),i.push(e)):i.push(e)}))}));i.length;)l.push(i.splice(0,_));a.setState({ncList:l,wallNodes:n})}else{if(2===t.length)return;t.push(e.props.className);var o=[],c=[];for(r.forEach((function(t){t.forEach((function(t){"wallNode"!==t.props.className&&e.props.className===t.props.className?(t=s.a.createElement(v,{testid:s.a.createElement("div",{className:"flag"},s.a.createElement("i",{class:"fab fa-font-awesome-flag"})),className:t.props.className}),o.push(t)):o.push(t)}))}));o.length;)c.push(o.splice(0,_));a.setState({ncList:c,toPath:t})}},a.handleAlg=function(e){switch(a.addWall(),e){case"dijkstra":a.dijkstras(a.state.toPath[0],a.state.toPath[1]),a.setState({toPath:[]});break;case"BFS":a.BFS(a.state.toPath[0],a.state.toPath[1]),a.setState({toPath:[]});break;case"GBFS":a.GBFS(a.state.toPath[0],a.state.toPath[1]),a.setState({toPath:[]});break;case"Astar":a.Astar(a.state.toPath[0],a.state.toPath[1]),a.setState({toPath:[]})}},a.toggleWall=function(e){a.setState((function(e){return{isWall:!e.isWall}}))},a.closeSide=function(){!0===a.state.sideBar?(document.getElementById("sideBar").style.width="100px",a.setState({sideBar:!1})):(document.getElementById("sideBar").style.width="480px",document.getElementById("clearBtn").style.marginLeft="20",a.setState({sideBar:!0}))},a.componentDidMount=Object(c.a)(o.a.mark((function e(){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,a.gridComponent();case 2:window.jQuery("#dijkstra").popover(),window.jQuery("#dijkstra").click((function(e){window.jQuery("#dijkstra").popover("hide")})),window.jQuery("#BFS").popover(),window.jQuery("#BFS").click((function(e){window.jQuery("#BFS").popover("hide")})),window.jQuery("#GBFS").popover(),window.jQuery("#GBFS").click((function(e){window.jQuery("#GBFS").popover("hide")})),window.jQuery("#Astar").popover(),window.jQuery("#Astar").click((function(e){window.jQuery("#Astar").popover("hide")})),window.jQuery("#myModal").modal();case 11:case"end":return e.stop()}}),e)}))),a.state={isStart:!0,nodeTotal:[],adjList:{},visNode:[],visNum:null,ncList:[],toPath:[],pathLength:[],wallNodes:[],isWall:!1,time:null,sideBar:!0},a}return Object(f.a)(t,e),Object(d.a)(t,[{key:"gridComponent",value:function(){for(var e=N(),t=N(),a=0,n=0;n<e.length;n++)for(var r=0;r<e[n].length;r++){var i=s.a.createElement(g,{testid:a,className:"node "+a,handleClick:this.handleClick});e[n][r]=i,a++}for(var l=0;l<k;l++)this.addNode("node ".concat(l));for(var o=0,c=0;c<t.length;c++)for(var h=0;h<t[c].length;h++)t[c][h]=o,o++;for(var d=0;d<t.length-1;d++)for(var u=0;u<t.length;u++)this.addEdge("node ".concat(t[u][d]),"node ".concat(t[u][d+1]),2);for(var m=0;m<t.length;m++)for(var f=0;f<t.length-1;f++)this.addEdge("node ".concat(t[f+1][m]),"node ".concat(t[f][m]),2);this.setState({ncList:e,wallNodes:[],toPath:[],visNode:[],visNum:null,isWall:!1,time:null})}},{key:"addNode",value:function(e){var t=this.state.nodeTotal,a=this.state.adjList;t.push(e),a[e]=[],this.setState({nodeTotal:t,adjList:a})}},{key:"addEdge",value:function(e,t,a){var n=this.state.adjList;n[e].push({connection:t,weight:a}),n[t].push({connection:e,weight:a}),this.setState({adjList:n})}},{key:"addWall",value:function(){var e=this.state.wallNodes,t=this.state.adjList;Object.keys(t).forEach((function(a){e.find((function(e){return e===a}))&&Object.keys(t[a]).forEach((function(e){t[a][e].weight=1/0}))})),this.setState({adjList:t})}},{key:"BFS",value:function(e,t){var a={},n=new b,s=new Set,r=this.state.adjList,i=this.state.visNode,l=performance.now();for(n.insert(e,0),i.push(e);!n.isEmpty();){var o=n.remove();if(o===t)return;!function(){var e=o.element;r[e].forEach((function(r){s.has(r.connection)||r.weight===1/0||(s.add(r.connection),n.insert(r.connection),a[r.connection]=e,i.includes(t)||i.push(e))}))}()}for(var c=performance.now(),h=Math.trunc(c-l),d=[t],u=t;u!==e;)d.unshift(a[u]),u=a[u];this.setState({visNode:i,time:h,pathLength:d.length}),this.animateVis(d)}},{key:"dijkstras",value:function(e,t){var a={},n={},s=new b,r=performance.now();a[e]=0;var i=this.state.nodeTotal,l=this.state.adjList,o=this.state.visNode;i.forEach((function(t){t!==e&&(a[t]=1/0)})),s.insert(e,0),o.push(e);for(var c=function(){var e=s.remove().element;l[e].forEach((function(r){var i=a[e]+r.weight;i<a[r.connection]&&(a[r.connection]=i,n[r.connection]=e,s.insert(r.connection,i),o.includes(t)||o.includes(e)||o.push(e))}))};!s.isEmpty();)c();for(var h=performance.now(),d=Math.trunc(h-r),u=[t],m=t;m!==e;)u.unshift(n[m]),m=n[m];this.setState({visNode:o,time:d,pathLength:u.length}),this.animateVis(u)}},{key:"GBFS",value:function(e,t){var a,n,s=this,r={},i=new b,l=performance.now(),o=this.state.adjList,c=this.state.visNode;i.insert(e,0),c.push(e);for(var h=0;h<_;h++)for(var d=0;d<20;d++)this.state.ncList[h][d].props.className===t&&(a=h,n=d);for(var u=function(){var e=i.remove().element;o[e].forEach((function(l){if(!Object.keys(r).includes(l.connection)&&l.weight!==1/0){var o=s.diagonalHeuristic(a,n,l);r[l.connection]=e,i.insert(l.connection,o),c.includes(t)||c.includes(e)||c.push(e)}}))};!i.isEmpty();)u();for(var m=performance.now(),f=Math.trunc(m-l),p=[t],g=t;g!==e;)p.unshift(r[g]),g=r[g];this.setState({visNode:c,time:f,pathLength:p.length}),this.animateVis(p)}},{key:"Astar",value:function(e,t){var a=this,n={},s={},r=new b,i=performance.now();n[e]=0;var l,o,c=this.state.nodeTotal,h=this.state.adjList,d=this.state.visNode;c.forEach((function(t){t!==e&&(n[t]=1/0)})),r.insert(e,0),d.push(e);for(var u=0;u<_;u++)for(var m=0;m<20;m++)this.state.ncList[u][m].props.className===t&&(l=u,o=m);for(var f=function(){var e=r.remove().element;h[e].forEach((function(i){if(!Object.keys(s).includes(i.connection)&&i.weight!==1/0){var c=n[e]+i.weight,h=c+a.diagonalHeuristic(l,o,i);c<n[i.connection]&&(n[i.connection]=c,s[i.connection]=e,r.insert(i.connection,h),d.includes(t)||d.push(e))}}))};!r.isEmpty();)f();for(var p=performance.now(),g=Math.trunc(p-i),v=[t],E=t;E!==e;)v.unshift(s[E]),E=s[E];this.setState({visNode:d,time:g,pathLength:v.length}),this.animateVis(v)}},{key:"diagonalHeuristic",value:function(e,t,a){for(var n,s,r=0;r<_;r++)for(var i=0;i<20;i++)this.state.ncList[r][i].props.className===a.connection&&(n=r,s=i);return Math.max(Math.abs(n-e),Math.abs(s-t))}},{key:"animate",value:function(e){var t=this.state.ncList,a=[],n=[],r=0;for(t.forEach((function(t){t.forEach((function(t){e.find((function(e){return t.props.className===e}))?(t=s.a.createElement(v,{testid:t.props.testid,className:"pathNode",wait:r}),a.push(t),r+=80):a.push(t)}))}));a.length;)n.push(a.splice(0,_));this.setState({ncList:n})}},{key:"animateVis",value:function(e){var t=this,a=this.state.visNode,n={},r=this.state.ncList,i=[],l=[],o=[],c=0,h=[];a.forEach((function(e){n[e]||(n[e]=!0)}));for(var d=0;d<_;d++)for(var u=0;u<_;u++)i.push(r[d][u]);for(Object.keys(n).forEach((function(e){i.forEach((function(t){e===t.props.className&&(t=s.a.createElement(w,{testid:t.props.testid,className:t.props.className,wait:c}),l.push(t),c+=40)}))})),r.forEach((function(e){e.forEach((function(e){if(l.find((function(t){return e.props.className===t.props.className}))){var t=l.find((function(t){return e.props.className===t.props.className}));e=t,h.push(e)}else"wallNode"===e.props.className?(e=s.a.createElement(E,{testid:e.props.testid}),h.push(e)):(e=s.a.createElement(g,{testid:e.props.testid,className:e.props.className,handleClick:function(){return null}}),h.push(e))}))}));h.length;)o.push(h.splice(0,_));this.setState({ncList:o,visNum:Object.keys(n).length}),setTimeout((function(){t.animate(e)}),c+500)}},{key:"render",value:function(){var e,t,a,n,r,i,l,o=this;return e=!0===this.state.isWall?s.a.createElement("button",{className:"btn wallToggle",onClick:function(e){return o.toggleWall()}},s.a.createElement("i",{class:"fas fa-toggle-on"})," Add Wall"):s.a.createElement("button",{className:"btn wallToggleOff",onClick:function(e){return o.toggleWall()}},s.a.createElement("i",{class:"fas fa-toggle-off"})," Add Wall"),this.state.toPath.length<2?!0===this.state.sideBar?(t=s.a.createElement("button",{className:"btn wallToggleOff ",id:"dijkstra","data-toggle":"tooltip","data-trigger":"hover","data-placement":"top","data-html":"true",title:"<i class='fas fa-cogs'></i> <b>Dijkstra's Shortest Path</b>","data-content":"Dijkstra's Shortest Path Algorithm is a <b>weighted</b> <b>greedy</b> algorithm that <b>guarantees</b> the shortest path between two nodes in a graph <br/> The algorithm will only visit neighboring nodes that have the <b>shortest distance</b> between the starting node<br/>",onClick:function(){return o.handleAlg("dijkstra")},disabled:!0},s.a.createElement("i",{class:"fas fa-cogs"})," Dijkstra"),a=s.a.createElement("button",{className:"btn wallToggleOff ",id:"BFS","data-toggle":"tooltip","data-trigger":"hover","data-placement":"top","data-html":"true",title:"<i class='fas fa-cog'></i> <b>Breadth First Search</b>","data-content":"Breadth First Search is an <b>unweighted</b> <b>greedy</b> algorithm that <b>guarantees</b> the shortest path between two nodes in a graph <br/> The algorithm will visit <b>all neighboring nodes</b> sequentually until the end node is found<br/>",onClick:function(){return o.handleAlg("BFS")},disabled:!0},s.a.createElement("i",{class:"fas fa-cog"})," BFS"),n=s.a.createElement("button",{className:"btn wallToggleOff ",id:"GBFS","data-toggle":"tooltip","data-trigger":"hover","data-placement":"top","data-html":"true",title:"<i class='fas fa-map-marker'></i> <b>Greedy Best First Search</b>","data-content":"Greedy Best First Search is an <b>unweighted</b> <b>greedy</b> algorithm that <b>does not guarantee</b> the shortest path between two nodes in a graph <br/> The algorithm uses a <b>diagonal heuristic</b> (a prediction as to where the goal node is located) to trace a path<br/>",onClick:function(){return o.handleAlg("GBFS")},disabled:!0},s.a.createElement("i",{class:"fas fa-map-marker"})," GBFS"),r=s.a.createElement("button",{className:"btn wallToggleOff ",id:"Astar","data-toggle":"tooltip","data-trigger":"hover","data-placement":"top","data-html":"true",title:"<i class='fas fa-map-marker-alt'></i> <b>A*</b>","data-content":"A* Search is a <b>weighted</b> <b>greedy</b> algorithm that <b>guarantees</b> the shortest path between two nodes in a graph <br/> The algorithm uses a <b>diagonal heuristic</b> (a prediction as to where the goal node is located) in conjunction with node distances to trace a path<br/>",onClick:function(){return o.handleAlg("Astar")},disabled:!0},s.a.createElement("i",{class:"fas fa-map-marker-alt"})," A*")):(t=s.a.createElement("button",{className:"btn wallToggleOff ",style:{marginLeft:"0px",width:"100px"},onClick:function(){return o.handleDijkstra()},disabled:!0},"Dijkstra"),a=s.a.createElement("button",{className:"btn wallToggleOff ",style:{marginLeft:"0px",width:"100px"},onClick:function(){return o.handleBFS()},disabled:!0},"BFS")):!0===this.state.sideBar?(t=s.a.createElement("button",{className:"btn wallToggleOff ",id:"dijkstra","data-toggle":"tooltip","data-trigger":"hover","data-placement":"top","data-html":"true",title:"<i class='fas fa-cogs'></i> <b>Dijkstra's Shortest Path</b>","data-content":"Dijkstra's Shortest Path Algorithm is a <b>weighted</b> <b>greedy</b> algorithm that <b>guarantees</b> the shortest path between two nodes in a graph <br/> The algorithm will only visit neighboring nodes that have the <b>shortest distance</b> between the starting node<br/>",onClick:function(){return o.handleAlg("dijkstra")}},s.a.createElement("i",{class:"fas fa-cogs"})," Dijkstra"),a=s.a.createElement("button",{className:"btn wallToggleOff ",id:"BFS","data-toggle":"tooltip","data-trigger":"hover","data-placement":"bottom","data-html":"true",title:"<i class='fas fa-cog'></i> <b>Breadth First Search</b>","data-content":"Breadth First Search is an <b>unweighted</b> <b>greedy</b> algorithm that <b>guarantees</b> the shortest path between two nodes in a graph <br/> The algorithm will visit <b>all neighboring nodes</b> sequentually until the end node is found<br/>",onClick:function(){return o.handleAlg("BFS")}},s.a.createElement("i",{class:"fas fa-cog"})," BFS"),n=s.a.createElement("button",{className:"btn wallToggleOff ",id:"GBFS","data-toggle":"tooltip","data-trigger":"hover","data-placement":"top","data-html":"true",title:"<i class='fas fa-map-marker'></i> <b>Greedy Best First Search</b>","data-content":"Breadth First Search is an <b>unweighted</b> <b>greedy</b> algorithm that <b>does not guarantee</b> the shortest path between two nodes in a graph <br/> The algorithm uses a <b>diagonal heuristic</b> (a prediction as to where the goal node is located) to trace a path<br/>",onClick:function(){return o.handleAlg("GBFS")}},s.a.createElement("i",{class:"fas fa-map-marker"})," GBFS"),r=s.a.createElement("button",{className:"btn wallToggleOff ",id:"Astar","data-toggle":"tooltip","data-trigger":"hover","data-placement":"top","data-html":"true",title:"<i class='fas fa-fa-map-alt'></i> <b>A*</b>","data-content":"A* Search is a <b>weighted</b> <b>greedy</b> algorithm that <b>guarantees</b> the shortest path between two nodes in a graph <br/> The algorithm uses a <b>diagonal heuristic</b> (a prediction as to where the goal node is located) in conjunction with node distances to trace a path<br/>",onClick:function(){return o.handleAlg("Astar")}},s.a.createElement("i",{class:"fas fa-map-marker-alt"})," A*")):(t=s.a.createElement("button",{className:"btn wallToggleOff ",style:{marginLeft:"0px",width:"100px"},onClick:function(){return o.handleDijkstra()}},"Dijkstra"),a=s.a.createElement("button",{className:"btn wallToggleOff ",style:{marginLeft:"0px",width:"100px"},onClick:function(){return o.handleBFS()}},"BFS")),i=null!==this.state.time?s.a.createElement("div",{className:"card infoCard"},s.a.createElement("p",{class:"card-title card-header performance"},s.a.createElement("i",{class:"fas fa-tachometer-alt"})," Algorithm Performance"),s.a.createElement("div",{className:"card-body"},s.a.createElement("p",null,s.a.createElement("b",null,this.state.pathLength)," nodes in path"),s.a.createElement("p",null,s.a.createElement("b",null,this.state.visNum)," nodes visited"))):null,l=!0===this.state.sideBar?s.a.createElement("nav",{id:"sideBar"},s.a.createElement("p",{id:"sideBarTitle"},s.a.createElement("i",{class:"fas fa-wrench"})," Instructions:"),s.a.createElement("p",{id:"bar"},"______________________________________________________________________________"),s.a.createElement("ul",null,s.a.createElement("li",{id:"sText"},"Click on any 2 nodes on the grid to pathfind"),s.a.createElement("div",{id:"pathNodes"},s.a.createElement("p",{id:"pathText"}," Selected Nodes: "),s.a.createElement("p",{id:"pathText"},this.state.toPath[0]," ",this.state.toPath[1])),s.a.createElement("p",{id:"bar"},"_____________________"),s.a.createElement("div",{id:"infoBox"},s.a.createElement("div",{id:"textBox"},s.a.createElement("li",{id:"sText"},'Add Barriers on the grid using the "Add Wall" button below or clear the grid using the "Clear Grid" button'),s.a.createElement("br",null),e,s.a.createElement("button",{className:"btn wallToggleOff clear",id:"clearBtn",onClick:function(){return o.gridComponent()}},s.a.createElement("i",{class:"fas fa-border-all"})," Clear Grid"),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("li",{id:"sText"},"When you're ready, click an algorithm to visualize!"),s.a.createElement("br",null),a,t,n,r,s.a.createElement("br",null),s.a.createElement("br",null),i,s.a.createElement("br",null))))):s.a.createElement("nav",{id:"sideBar"},s.a.createElement("button",{onClick:function(e){return o.closeSide()}},"close"),s.a.createElement("br",null),s.a.createElement("br",null),e,s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("button",{className:"btn wallToggleOff clear",id:"clearBtn",style:{marginLeft:"0px",width:"100px"},onClick:function(){return o.gridComponent()}},"Clear Grid"),s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("p",{id:"bar"},"_____________________"),s.a.createElement("br",null),s.a.createElement("br",null),a,s.a.createElement("br",null),s.a.createElement("br",null),t),s.a.createElement("div",null,s.a.createElement("div",{className:"modal fade",id:"myModal",tabindex:"-1",role:"dialog","aria-labelledby":"exampleModalCenterTitle","aria-hidden":"true"},s.a.createElement("div",{className:"modal-dialog modal-dialog-centered",role:"document"},s.a.createElement("div",{className:"modal-content"},s.a.createElement("div",{className:"modal-header"},s.a.createElement("h4",{className:"modal-title"},s.a.createElement("i",{class:"fab fa-react"})," React Pathfinder"),s.a.createElement("button",{type:"button",class:"close","data-dismiss":"modal","aria-label":"Close"},s.a.createElement("span",{"aria-hidden":"true"},"\xd7"))),s.a.createElement("div",{className:"modal-body"},s.a.createElement("p",null,"Welcome to the ",s.a.createElement("b",null,"React Pathfinder!")," ",s.a.createElement("br",null),s.a.createElement("br",null)," This application ",s.a.createElement("b",null,"visualizes pathfinding algorithms")," on an interactive grid. ",s.a.createElement("br",null),s.a.createElement("br",null),"Click on any 2 nodes on the grid and watch the pathfinder animate the path between them! ",s.a.createElement("br",null),s.a.createElement("br",null)," You can even ",s.a.createElement("b",null,"create barriers"),' between the nodes using the "Add Wall" button!'),s.a.createElement("br",null),s.a.createElement("h1",{className:"text-center diagram"},s.a.createElement("i",{className:"fas fa-project-diagram"}))),s.a.createElement("div",{className:"modal-footer"},s.a.createElement("button",{type:"button",className:"btn btn-secondary","data-dismiss":"modal"},"Close"))))),s.a.createElement("nav",{className:"navbar"},s.a.createElement("span",{className:"navbar-brand mb-0 h1 title"},s.a.createElement("i",{className:"fab fa-react"})," React Pathfinder"),s.a.createElement("span",{className:"navbar-brand mb-0 name"},"Sasank G")),l,s.a.createElement("div",{className:"grid"},this.state.ncList))}}]),t}(n.Component);a(19);var j=function(){return s.a.createElement(y,null)};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(s.a.createElement(j,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}],[[11,1,2]]]);
//# sourceMappingURL=main.1477af1d.chunk.js.map